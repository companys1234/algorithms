# -*- coding: utf-8 -*-
"""1926C

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lVcuou5pIeVAaWqsT7CH9RFnc87v89Ej
"""

import sys

def precompute(max_n):
    prefix = [0] * (max_n + 1)
    for i in range(1, max_n + 1):
        # Считаем сумму цифр числа i
        digit_sum = 0
        num = i
        while num > 0:
            digit_sum += num % 10
            num = num // 10
        prefix[i] = prefix[i-1] + digit_sum
    return prefix

def main():
    input = sys.stdin.read().split()
    idx = 0
    t = int(input[idx])
    idx += 1
    test_cases = []
    max_n = 0
    for _ in range(t):
        n = int(input[idx])
        test_cases.append(n)
        if n > max_n:
            max_n = n
        idx += 1

    # Предподсчет префиксных сумм до максимального n
    prefix = precompute(max_n)

    # Ответы на запросы
    for n in test_cases:
        print(prefix[n])

if __name__ == "__main__":
    main()