# -*- coding: utf-8 -*-
"""277A

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MBoyJTe2l0XwGENcK9BfW0DHk-jDhCLe
"""

import sys
from collections import defaultdict

def main():
    input = sys.stdin.read().split()
    ptr = 0
    while ptr < len(input):
        n = int(input[ptr])
        ptr += 1
        m = int(input[ptr])
        ptr += 1

        ans = 0
        all_zero = True
        visited = [False] * n
        graph = [ [False]*m for _ in range(n) ]

        for i in range(n):
            k = int(input[ptr])
            ptr += 1
            for _ in range(k):
                tmp = int(input[ptr]) - 1
                ptr += 1
                graph[i][tmp] = True
                all_zero = False

        def dfs(start):
            visited[start] = True
            for i in range(n):
                if not visited[i]:
                    for j in range(m):
                        if graph[i][j] and graph[start][j]:
                            dfs(i)

        for i in range(n):
            if not visited[i]:
                dfs(i)
                ans += 1

        if all_zero:
            print(ans)
        else:
            print(ans - 1)

if __name__ == "__main__":
    main()