# -*- coding: utf-8 -*-
"""1538c

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VXjii65fkPODNB1r2QHRq_O7vBBtiKw-
"""

import bisect

def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    idx = 0
    t = int(data[idx])
    idx += 1
    results = []
    for _ in range(t):
        n, l, r = map(int, data[idx:idx + 3])
        idx += 3
        a = list(map(int, data[idx:idx + n]))
        idx += n
        a.sort()
        count = 0
        for i in range(n):
            left = l - a[i]
            right = r - a[i]
            # Находим первый элемент >= left
            low = bisect.bisect_left(a, left, i + 1)
            # Находим первый элемент > right
            high = bisect.bisect_right(a, right, i + 1)
            count += high - low
        results.append(count)
    print('\n'.join(map(str, results)))

solve()