# -*- coding: utf-8 -*-
"""1742E

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17WHTcclvdh7c2VkSnGwfY8NrSHt9hm1V
"""

import bisect

t = int(input())
for _ in range(t):
    n, q = map(int, input().split())
    a = list(map(int, input().split()))
    k = list(map(int, input().split()))

    # Создаем массив префиксных сумм
    prefix = [0] * (n + 1)
    for i in range(n):
        prefix[i+1] = prefix[i] + a[i]

    # Создаем отсортированный список a для бинарного поиска
    sorted_a = []
    max_so_far = 0
    for num in a:
        if num > max_so_far:
            max_so_far = num
        sorted_a.append(max_so_far)

    # Обрабатываем запросы
    results = []
    for ki in k:
        # Находим индекс последней ступеньки, которую можно преодолеть
        idx = bisect.bisect_right(sorted_a, ki)
        results.append(str(prefix[idx]))

    print(' '.join(results))